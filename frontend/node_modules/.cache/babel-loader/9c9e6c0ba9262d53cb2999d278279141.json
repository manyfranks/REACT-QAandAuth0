{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\matt\\\\Desktop\\\\qa-app\\\\frontend\\\\src\\\\Question\\\\Question.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport SubmitAnswer from './SubmitAnswer';\nimport auth0Client from '../Auth';\n\nclass Question extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      question: null\n    };\n    this.submitAnswer = this.submitAnswer.bind(this);\n  }\n\n  async componentDidMount() {\n    await this.refreshQuestion();\n  }\n\n  async refreshQuestion() {\n    const {\n      match: {\n        params\n      }\n    } = this.props;\n    const question = (await axios.get(`http://localhost:8081/${params.questionId}`)).data;\n    this.setState({\n      question\n    });\n  }\n\n  async submitAnswer(answer) {\n    await axios.post(`http://localhost:8081/answer/${this.state.question.id}`, {\n      answer\n    }, {\n      headers: {\n        'Authorization': `Bearer ${auth0Client.getIdToken()}`\n      }\n    });\n    await this.refreshQuestion();\n  }\n\n  render() {\n    const {\n      question\n    } = this.state;\n    if (question === null) return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 35\n      }\n    }, \"Loading ...\");\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"display-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, question.title), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, question.description), /*#__PURE__*/React.createElement(\"hr\", {\n      className: \"my-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(SubmitAnswer, {\n      questionId: question.id,\n      submitAnswer: this.submitAnswer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, \"Answers:\"), question.answers.map((answer, idx) => /*#__PURE__*/React.createElement(\"p\", {\n      className: \"lead\",\n      key: idx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, answer.answer)))));\n  }\n\n}\n\nexport default Question;","map":{"version":3,"sources":["C:/Users/matt/Desktop/qa-app/frontend/src/Question/Question.js"],"names":["React","Component","axios","SubmitAnswer","auth0Client","Question","constructor","props","state","question","submitAnswer","bind","componentDidMount","refreshQuestion","match","params","get","questionId","data","setState","answer","post","id","headers","getIdToken","render","title","description","answers","map","idx"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,SAAxB;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAC/BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAIA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAED,QAAMC,iBAAN,GAA0B;AACxB,UAAM,KAAKC,eAAL,EAAN;AACD;;AAED,QAAMA,eAAN,GAAwB;AACtB,UAAM;AAAEC,MAAAA,KAAK,EAAE;AAAEC,QAAAA;AAAF;AAAT,QAAwB,KAAKR,KAAnC;AACA,UAAME,QAAQ,GAAG,CAAC,MAAMP,KAAK,CAACc,GAAN,CAAW,yBAAwBD,MAAM,CAACE,UAAW,EAArD,CAAP,EAAgEC,IAAjF;AACA,SAAKC,QAAL,CAAc;AACZV,MAAAA;AADY,KAAd;AAGD;;AAED,QAAMC,YAAN,CAAmBU,MAAnB,EAA2B;AACzB,UAAMlB,KAAK,CAACmB,IAAN,CAAY,gCAA+B,KAAKb,KAAL,CAAWC,QAAX,CAAoBa,EAAG,EAAlE,EAAqE;AACzEF,MAAAA;AADyE,KAArE,EAEH;AACDG,MAAAA,OAAO,EAAE;AAAE,yBAAkB,UAASnB,WAAW,CAACoB,UAAZ,EAAyB;AAAtD;AADR,KAFG,CAAN;AAKA,UAAM,KAAKX,eAAL,EAAN;AACD;;AAEDY,EAAAA,MAAM,GAAG;AACP,UAAM;AAAChB,MAAAA;AAAD,QAAa,KAAKD,KAAxB;AACA,QAAIC,QAAQ,KAAK,IAAjB,EAAuB,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACvB,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BA,QAAQ,CAACiB,KAApC,CADF,eAEE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqBjB,QAAQ,CAACkB,WAA9B,CAFF,eAGE;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAIE,oBAAC,YAAD;AAAc,MAAA,UAAU,EAAElB,QAAQ,CAACa,EAAnC;AAAuC,MAAA,YAAY,EAAE,KAAKZ,YAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,EAOID,QAAQ,CAACmB,OAAT,CAAiBC,GAAjB,CAAqB,CAACT,MAAD,EAASU,GAAT,kBACnB;AAAG,MAAA,SAAS,EAAC,MAAb;AAAoB,MAAA,GAAG,EAAEA,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+BV,MAAM,CAACA,MAAtC,CADF,CAPJ,CADF,CADF,CADF;AAkBD;;AApD8B;;AAuDjC,eAAef,QAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport SubmitAnswer from './SubmitAnswer';\r\nimport auth0Client from '../Auth';\r\n\r\nclass Question extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      question: null,\r\n    };\r\n\r\n    this.submitAnswer = this.submitAnswer.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.refreshQuestion();\r\n  }\r\n\r\n  async refreshQuestion() {\r\n    const { match: { params } } = this.props;\r\n    const question = (await axios.get(`http://localhost:8081/${params.questionId}`)).data;\r\n    this.setState({\r\n      question,\r\n    });\r\n  }\r\n\r\n  async submitAnswer(answer) {\r\n    await axios.post(`http://localhost:8081/answer/${this.state.question.id}`, {\r\n      answer,\r\n    }, {\r\n      headers: { 'Authorization': `Bearer ${auth0Client.getIdToken()}` }\r\n    });\r\n    await this.refreshQuestion();\r\n  }\r\n\r\n  render() {\r\n    const {question} = this.state;\r\n    if (question === null) return <p>Loading ...</p>;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"jumbotron col-12\">\r\n            <h1 className=\"display-3\">{question.title}</h1>\r\n            <p className=\"lead\">{question.description}</p>\r\n            <hr className=\"my-4\" />\r\n            <SubmitAnswer questionId={question.id} submitAnswer={this.submitAnswer} />\r\n            <p>Answers:</p>\r\n            {\r\n              question.answers.map((answer, idx) => (\r\n                <p className=\"lead\" key={idx}>{answer.answer}</p>\r\n              ))\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Question;"]},"metadata":{},"sourceType":"module"}